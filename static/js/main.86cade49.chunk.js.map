{"version":3,"sources":["components/HomeTitleBar.js","components/HomeBar.js","components/HomeBody.js","components/Home.js","components/NavigationBar.js","components/Resume.js","App.js","serviceWorker.js","index.js"],"names":["HomeTitleBar","className","style","color","HomeBar","props","React","useState","setColor","styles","onMouseEnter","dark","onMouseLeave","text","HomeBody","to","href","target","Home","NavigationPage","Component","Resume","NavigationBar","App","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.86cade49.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../styles/homePage.css';\r\n\r\n\r\nfunction HomeTitleBar() {\r\n    return (\r\n        \r\n        <div className=\"home-title-header\">\r\n            <h1 className=\"home-title\">\r\n                {/* <h1 className=\"home-title-letter\" style={{ color: '#FFBEBE' }}>J</h1>\r\n                <h1 className=\"home-title-letter\" style={{ color: '#FFC683' }}>o</h1>\r\n                <h1 className=\"home-title-letter\" style={{ color: '#FCF194' }}>s</h1>\r\n                <h1 className=\"home-title-letter\" style={{ color: '#9FEAC1' }}>h</h1>\r\n                <h1 className=\"home-title-letter\" style={{ color: '#82B4FF' }}>u</h1>\r\n                <h1 className=\"home-title-letter\" style={{ color: '#BD89FF' }}>a</h1>\r\n                <h1 className=\"home-title-letter\"> B</h1>\r\n                <h1 className=\"home-title-letter\">a</h1>\r\n                <h1 className=\"home-title-letter\">u</h1>\r\n                <h1 className=\"home-title-letter\">m</h1> */}\r\n                <h1 className=\"home-title-letter\"  style={{ color: '#d45e03' }}>Joshua Baum </h1>\r\n            </h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomeTitleBar;\r\n","import React from 'react';\r\nimport '../styles/homePage.css';\r\n\r\n\r\n\r\nexport default function HomeBar(props){\r\n        const [color, setColor] = React.useState(props.color);\r\n        const styles = {\r\n            'background-color': color,\r\n            'transform': `rotate(7deg) translate(-2vw, 0)`\r\n        }\r\n        return (\r\n            <div className=\"bar\" style={styles}\r\n                onMouseEnter={() => setColor(props.dark)}\r\n                onMouseLeave={() => setColor(props.color)}\r\n            >\r\n                <h2 className=\"bar-text\">{props.text}</h2>\r\n            </div>\r\n        );\r\n}","import React from 'react';\r\nimport '../styles/homePage.css';\r\nimport './HomeBar';\r\nimport HomeBar from './HomeBar';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function HomeBody(props) {\r\n    return (\r\n        <div className=\"home-body\">\r\n            <Link to=\"/personal/resume\" className=\"links\"> <HomeBar text=\"Resume\" color=\"#82C7D7\" dark=\"#74555d\"/></Link>\r\n            <Link to=\"/personal/photography\" className=\"links\"><HomeBar text=\"Photography\" color=\"#c8bb6d\" dark=\"#74555d\"/></Link>\r\n            <a href=\"https://www.theliveslost.com/\" target=\"_blank\"className=\"links\" ><HomeBar text=\"The Lives Lost\" color=\"#ffa800\" dark=\"#74555d\"/></a>\r\n            <Link to=\"/personal/favorites\" className=\"links\"><HomeBar text=\"My Favorite Things\" color=\"#c47d5d\" dark=\"#74555d\"/></Link>\r\n            <HomeBar text=\"\" color=\"#a25328\" dark=\"#a25328\" />\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport '../styles/homePage.css';\r\nimport HomeTitleBar from './HomeTitleBar';\r\nimport HomeBody from './HomeBody';\r\n\r\nexport default function Home(props) {\r\n    return (\r\n        <div className=\"home-box\">\r\n            <HomeTitleBar />\r\n            <HomeBody />\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport '../styles/homePage.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\n{/* <Redirect to=\"/dashboard\"/> */}\r\nclass NavigationPage extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"nav-bar\">\r\n                <Link to=\"/personal\" className=\"links\"> <h3 className=\"nav-bar-text\" style={{ color: '#d45e03' }} >Home</h3> </Link>\r\n                <Link to=\"/personal/resume\" className=\"links\"> <h3 className=\"nav-bar-text\" style={{ color: '#82C7D7' }}>Resume</h3> </Link>\r\n                <Link to=\"/personal/photography\" className=\"links\"><h3 className=\"nav-bar-text\" style={{ color: '#c8bb6d' }}>Photography</h3> </Link>\r\n                <a href=\"https://www.theliveslost.com/\" target=\"_blank\" className=\"links\"> <h3 className=\"nav-bar-text\" style={{ color: '#ffa800' }}>The Lives Lost</h3> </a>\r\n                <Link to=\"/personal/favorites\" className=\"links\"><h3 className=\"nav-bar-text\" style={{ color: '#c47d5d' }}>Favorite Things</h3> </Link>\r\n            </div>\r\n    );\r\n    };\r\n}\r\n\r\nexport default NavigationPage;\r\n","import React from 'react';\r\nimport NavigationBar from './NavigationBar';\r\nimport '../styles/resume.css';\r\n\r\nexport default function Resume(props) {\r\n    return (\r\n        <div className=\"resume-box\">\r\n            <NavigationBar />\r\n        </div>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n \r\nimport Home from './components/Home';\r\nimport Resume from './components/Resume';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (      \r\n       <BrowserRouter>\r\n        <div>\r\n            <Switch>\r\n             <Route path=\"/personal\" component={Home} exact/>\r\n             <Route path=\"/personal/photography\" component={Home} exact/>\r\n             <Route path=\"/personal/favorites\" component={Home} exact/>\r\n             <Route path=\"/personal/resume\" component={Resume}/>\r\n             {/* <Route path=\"/contact\" component={Contact}/> */}\r\n           </Switch>\r\n        </div> \r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n \r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './styles/homePage.css';\r\nimport Home from './components/Home';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}